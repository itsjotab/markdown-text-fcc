{"ast":null,"code":"var _jsxFileName = \"/Users/itsjotab/Desktop/FCC-projects/markdown-text/markdown-text-fcc/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState } from 'react';\nimport { marked } from 'marked';\nimport \"./Telet.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let words = \"# This is a h1 \\n ## This is a sub-heading... \\n You can also make text **bold**... whoa! \\n\\n There's also [links](https://www.freecodecamp.org) to free code camp to learn how to do this! \\n > This is a Block Quotes! \\n 1. This is a numbered lists. \\n\\n [Telet Logo](`${Telet.jpg}`) \\n\\n Heres some code, <div></div>, between 2 backticks.\"; // Heres some code, `<div></div>`, between 2 backticks.\n  // ```\n  // // this is multi-line code:\n  // function anotherExample(firstLine, lastLine) {\n  //   if (firstLine == '```' && lastLine == '```') {\n  //     return multiLineCode;\n  //   }\n  // }\n  // ```\n  // There's also [links](https://www.freecodecamp.org) to free code camp to learn how to do this!\n  // And if you want to get really crazy, even tables:\n  // Wild Header | Crazy Header | Another Header?\n  // ------------ | ------------- | -------------\n  // Your content can | be here, and it | can be here....\n  // And here. | Okay. | I think we get it.\n  // - And of course there are lists.\n  //   - Some are bulleted.\n  //      - With different indentation levels.\n  //         - That look like this.\n  // 1. And there are numbered lists too.\n  // 1. Use just 1s if you want!\n  // 1. And last but not least, let's not forget embedded images:\n  // ![freeCodeCamp Logo](https://cdn.freecodecamp.org/testable-projects-fcc/images/fcc_secondary.svg)\n\n  const [text, setText] = useState(words);\n  const answer = marked.parse(text);\n  console.log(marked.parse(text));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"title\",\n        children: \"Markdown\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: text,\n        id: \"editor\",\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"bold\",\n        children: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"preview\",\n        className: \"preview\",\n        dangerouslySetInnerHTML: {\n          __html: answer\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"tl/EPXa0PkRRccs4PqgvHWyfdTc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","marked","App","words","text","setText","answer","parse","console","log","e","target","value","__html"],"sources":["/Users/itsjotab/Desktop/FCC-projects/markdown-text/markdown-text-fcc/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\nimport { marked } from 'marked';\nimport \"./Telet.jpg\"\n\n\nfunction App() {\n\n\n  let words = \"# This is a h1 \\n ## This is a sub-heading... \\n You can also make text **bold**... whoa! \\n\\n There's also [links](https://www.freecodecamp.org) to free code camp to learn how to do this! \\n > This is a Block Quotes! \\n 1. This is a numbered lists. \\n\\n [Telet Logo](`${Telet.jpg}`) \\n\\n Heres some code, <div></div>, between 2 backticks.\"\n \n \n \n \n  \n  // Heres some code, `<div></div>`, between 2 backticks.\n  \n  // ```\n  // // this is multi-line code:\n  \n  // function anotherExample(firstLine, lastLine) {\n  //   if (firstLine == '```' && lastLine == '```') {\n  //     return multiLineCode;\n  //   }\n  // }\n  // ```\n  \n  \n  // There's also [links](https://www.freecodecamp.org) to free code camp to learn how to do this!\n  \n  // And if you want to get really crazy, even tables:\n  \n  // Wild Header | Crazy Header | Another Header?\n  // ------------ | ------------- | -------------\n  // Your content can | be here, and it | can be here....\n  // And here. | Okay. | I think we get it.\n  \n  // - And of course there are lists.\n  //   - Some are bulleted.\n  //      - With different indentation levels.\n  //         - That look like this.\n  \n  \n  // 1. And there are numbered lists too.\n  // 1. Use just 1s if you want!\n  // 1. And last but not least, let's not forget embedded images:\n  \n  // ![freeCodeCamp Logo](https://cdn.freecodecamp.org/testable-projects-fcc/images/fcc_secondary.svg)\n  \n  \n\n  const [text, setText] = useState(words);\n  \n  const answer = marked.parse(text)\n  console.log(marked.parse(text))\n\n  return (\n    <div className=\"App\">\n      <div>\n        <h3 className='title'>Markdown</h3>\n        <textarea\n          value={text}\n          id='editor'\n          onChange={(e) => setText(e.target.value)} />\n      </div>\n      <div>\n        <h3 className='bold'>Preview</h3>\n        <div id=\"preview\" \n        className='preview'\n        dangerouslySetInnerHTML={{__html : answer }}> \n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAO,aAAP;;;AAGA,SAASC,GAAT,GAAe;EAAA;;EAGb,IAAIC,KAAK,GAAG,qVAAZ,CAHa,CASb;EAEA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAGA;EAEA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAGA;EACA;EACA;EAEA;;EAIA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAACG,KAAD,CAAhC;EAEA,MAAMG,MAAM,GAAGL,MAAM,CAACM,KAAP,CAAaH,IAAb,CAAf;EACAI,OAAO,CAACC,GAAR,CAAYR,MAAM,CAACM,KAAP,CAAaH,IAAb,CAAZ;EAEA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MAAA,wBACE;QAAI,SAAS,EAAC,OAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,KAAK,EAAEA,IADT;QAEE,EAAE,EAAC,QAFL;QAGE,QAAQ,EAAGM,CAAD,IAAOL,OAAO,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV;MAH1B;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAQE;MAAA,wBACE;QAAI,SAAS,EAAC,MAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAK,EAAE,EAAC,SAAR;QACA,SAAS,EAAC,SADV;QAEA,uBAAuB,EAAE;UAACC,MAAM,EAAGP;QAAV;MAFzB;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD;;GApEQJ,G;;KAAAA,G;AAsET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}